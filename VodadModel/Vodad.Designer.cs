//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("VodadModel", "FK_AlertMessage_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "AlertMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.AlertMessage), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ban_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Roles), "Ban", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Ban), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ban_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Ban", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Ban), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ban_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Ban", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Ban), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ban_User2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Ban", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Ban), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_BlackList_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "BlackList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.BlackList), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_BlackList_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "BlackList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.BlackList), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Certificates_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Certificates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Certificates), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Cheaters_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Cheaters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Cheaters), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_GeolocationPlatformPercentage_Geolocation", "Geolocation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Geolocation), "GeolocationPlatformPercentage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.GeolocationPlatformPercentage), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_GeolocationPlatformPercentagePerformerPlatform", "PerformerPlatform", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.PerformerPlatform), "GeolocationPlatformPercentage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.GeolocationPlatformPercentage), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Image_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.User), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Image), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderContent_Image", "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.Image), "OrderContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderContent), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ticket_Image", "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Image), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Tickets), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_MoneyTransfers_Merchants", "Merchants", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Merchants), "MoneyTransfers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.MoneyTransfers), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_UserMerchants_Merchants", "Merchants", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Merchants), "UserMerchants", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.UserMerchants), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Messages_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Messages), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Messages_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Messages), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_MoneyTransfers_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "MoneyTransfers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.MoneyTransfers), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_News_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "News", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.News), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Order_Regions", "Regions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Regions), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Order), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Order_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Order), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderContent_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.Order), "OrderContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderContent), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderThemes_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Order), "OrderThemes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderThemes), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderContent_Video", "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.Video), "OrderContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderContent), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderPerformed_OrderImages", "OrderContent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.OrderContent), "OrderPerformed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderPerformed), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderPerformed_PerformerPlatform", "PerformerPlatform", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.PerformerPlatform), "OrderPerformed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderPerformed), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderPerformed_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.User), "OrderPerformed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderPerformed), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_OrderThemes_Theme", "Themes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Themes), "OrderThemes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.OrderThemes), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_PerformerPlatform_Themes", "Themes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Themes), "PerformerPlatform", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.PerformerPlatform), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_PerformerPlatform_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "PerformerPlatform", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.PerformerPlatform), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerPlatform", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.PerformerPlatform), "PerformerStatistics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.PerformerStatistics), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_User_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Roles), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.User), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ticket_Ticket", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Tickets), "Tickets1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Tickets), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ticket_TicketThemes", "TicketThemes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.TicketThemes), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Tickets), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ticket_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Tickets), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ticket_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Tickets), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Ticket_User2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Tickets), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_User_Timezone", "Timezone", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.Timezone), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.User), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Transactions_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.User), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Transactions), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Transactions_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.User), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Transactions), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_User_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "User1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.User), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_UserMerchants_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "UserMerchants", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.UserMerchants), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Video_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VodadModel.User), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Video), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_Wallet_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "Wallet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.Wallet), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_WhiteList_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "WhiteList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.WhiteList), true)]
[assembly: EdmRelationshipAttribute("VodadModel", "FK_WhiteList_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VodadModel.User), "WhiteList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VodadModel.WhiteList), true)]

#endregion

namespace VodadModel
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class VodadEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект VodadEntities, используя строку соединения из раздела "VodadEntities" файла конфигурации приложения.
        /// </summary>
        public VodadEntities() : base("name=VodadEntities", "VodadEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта VodadEntities.
        /// </summary>
        public VodadEntities(string connectionString) : base(connectionString, "VodadEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта VodadEntities.
        /// </summary>
        public VodadEntities(EntityConnection connection) : base(connection, "VodadEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<C__RefactorLog> C__RefactorLog
        {
            get
            {
                if ((_C__RefactorLog == null))
                {
                    _C__RefactorLog = base.CreateObjectSet<C__RefactorLog>("C__RefactorLog");
                }
                return _C__RefactorLog;
            }
        }
        private ObjectSet<C__RefactorLog> _C__RefactorLog;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AlertMessage> AlertMessage
        {
            get
            {
                if ((_AlertMessage == null))
                {
                    _AlertMessage = base.CreateObjectSet<AlertMessage>("AlertMessage");
                }
                return _AlertMessage;
            }
        }
        private ObjectSet<AlertMessage> _AlertMessage;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Ban> Ban
        {
            get
            {
                if ((_Ban == null))
                {
                    _Ban = base.CreateObjectSet<Ban>("Ban");
                }
                return _Ban;
            }
        }
        private ObjectSet<Ban> _Ban;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<BlackList> BlackList
        {
            get
            {
                if ((_BlackList == null))
                {
                    _BlackList = base.CreateObjectSet<BlackList>("BlackList");
                }
                return _BlackList;
            }
        }
        private ObjectSet<BlackList> _BlackList;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Certificates> Certificates
        {
            get
            {
                if ((_Certificates == null))
                {
                    _Certificates = base.CreateObjectSet<Certificates>("Certificates");
                }
                return _Certificates;
            }
        }
        private ObjectSet<Certificates> _Certificates;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Cheaters> Cheaters
        {
            get
            {
                if ((_Cheaters == null))
                {
                    _Cheaters = base.CreateObjectSet<Cheaters>("Cheaters");
                }
                return _Cheaters;
            }
        }
        private ObjectSet<Cheaters> _Cheaters;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Geolocation> Geolocation
        {
            get
            {
                if ((_Geolocation == null))
                {
                    _Geolocation = base.CreateObjectSet<Geolocation>("Geolocation");
                }
                return _Geolocation;
            }
        }
        private ObjectSet<Geolocation> _Geolocation;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GeolocationPlatformPercentage> GeolocationPlatformPercentage
        {
            get
            {
                if ((_GeolocationPlatformPercentage == null))
                {
                    _GeolocationPlatformPercentage = base.CreateObjectSet<GeolocationPlatformPercentage>("GeolocationPlatformPercentage");
                }
                return _GeolocationPlatformPercentage;
            }
        }
        private ObjectSet<GeolocationPlatformPercentage> _GeolocationPlatformPercentage;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Image> Image
        {
            get
            {
                if ((_Image == null))
                {
                    _Image = base.CreateObjectSet<Image>("Image");
                }
                return _Image;
            }
        }
        private ObjectSet<Image> _Image;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Merchants> Merchants
        {
            get
            {
                if ((_Merchants == null))
                {
                    _Merchants = base.CreateObjectSet<Merchants>("Merchants");
                }
                return _Merchants;
            }
        }
        private ObjectSet<Merchants> _Merchants;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Messages> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Messages>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Messages> _Messages;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MoneyTransfers> MoneyTransfers
        {
            get
            {
                if ((_MoneyTransfers == null))
                {
                    _MoneyTransfers = base.CreateObjectSet<MoneyTransfers>("MoneyTransfers");
                }
                return _MoneyTransfers;
            }
        }
        private ObjectSet<MoneyTransfers> _MoneyTransfers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Order> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<Order>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<Order> _Order;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderContent> OrderContent
        {
            get
            {
                if ((_OrderContent == null))
                {
                    _OrderContent = base.CreateObjectSet<OrderContent>("OrderContent");
                }
                return _OrderContent;
            }
        }
        private ObjectSet<OrderContent> _OrderContent;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderPerformed> OrderPerformed
        {
            get
            {
                if ((_OrderPerformed == null))
                {
                    _OrderPerformed = base.CreateObjectSet<OrderPerformed>("OrderPerformed");
                }
                return _OrderPerformed;
            }
        }
        private ObjectSet<OrderPerformed> _OrderPerformed;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderThemes> OrderThemes
        {
            get
            {
                if ((_OrderThemes == null))
                {
                    _OrderThemes = base.CreateObjectSet<OrderThemes>("OrderThemes");
                }
                return _OrderThemes;
            }
        }
        private ObjectSet<OrderThemes> _OrderThemes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PerformerPlatform> PerformerPlatform
        {
            get
            {
                if ((_PerformerPlatform == null))
                {
                    _PerformerPlatform = base.CreateObjectSet<PerformerPlatform>("PerformerPlatform");
                }
                return _PerformerPlatform;
            }
        }
        private ObjectSet<PerformerPlatform> _PerformerPlatform;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PerformerStatistics> PerformerStatistics
        {
            get
            {
                if ((_PerformerStatistics == null))
                {
                    _PerformerStatistics = base.CreateObjectSet<PerformerStatistics>("PerformerStatistics");
                }
                return _PerformerStatistics;
            }
        }
        private ObjectSet<PerformerStatistics> _PerformerStatistics;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Regions> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Regions>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Regions> _Regions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Themes> Themes
        {
            get
            {
                if ((_Themes == null))
                {
                    _Themes = base.CreateObjectSet<Themes>("Themes");
                }
                return _Themes;
            }
        }
        private ObjectSet<Themes> _Themes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Tickets> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Tickets>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Tickets> _Tickets;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TicketThemes> TicketThemes
        {
            get
            {
                if ((_TicketThemes == null))
                {
                    _TicketThemes = base.CreateObjectSet<TicketThemes>("TicketThemes");
                }
                return _TicketThemes;
            }
        }
        private ObjectSet<TicketThemes> _TicketThemes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Timezone> Timezone
        {
            get
            {
                if ((_Timezone == null))
                {
                    _Timezone = base.CreateObjectSet<Timezone>("Timezone");
                }
                return _Timezone;
            }
        }
        private ObjectSet<Timezone> _Timezone;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Transactions> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transactions>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transactions> _Transactions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<UserMerchants> UserMerchants
        {
            get
            {
                if ((_UserMerchants == null))
                {
                    _UserMerchants = base.CreateObjectSet<UserMerchants>("UserMerchants");
                }
                return _UserMerchants;
            }
        }
        private ObjectSet<UserMerchants> _UserMerchants;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Video> Video
        {
            get
            {
                if ((_Video == null))
                {
                    _Video = base.CreateObjectSet<Video>("Video");
                }
                return _Video;
            }
        }
        private ObjectSet<Video> _Video;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Wallet> Wallet
        {
            get
            {
                if ((_Wallet == null))
                {
                    _Wallet = base.CreateObjectSet<Wallet>("Wallet");
                }
                return _Wallet;
            }
        }
        private ObjectSet<Wallet> _Wallet;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<WhiteList> WhiteList
        {
            get
            {
                if ((_WhiteList == null))
                {
                    _WhiteList = base.CreateObjectSet<WhiteList>("WhiteList");
                }
                return _WhiteList;
            }
        }
        private ObjectSet<WhiteList> _WhiteList;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet C__RefactorLog. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToC__RefactorLog(C__RefactorLog c__RefactorLog)
        {
            base.AddObject("C__RefactorLog", c__RefactorLog);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AlertMessage. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAlertMessage(AlertMessage alertMessage)
        {
            base.AddObject("AlertMessage", alertMessage);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Ban. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBan(Ban ban)
        {
            base.AddObject("Ban", ban);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet BlackList. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBlackList(BlackList blackList)
        {
            base.AddObject("BlackList", blackList);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Certificates. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCertificates(Certificates certificates)
        {
            base.AddObject("Certificates", certificates);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Cheaters. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCheaters(Cheaters cheaters)
        {
            base.AddObject("Cheaters", cheaters);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Geolocation. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGeolocation(Geolocation geolocation)
        {
            base.AddObject("Geolocation", geolocation);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GeolocationPlatformPercentage. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGeolocationPlatformPercentage(GeolocationPlatformPercentage geolocationPlatformPercentage)
        {
            base.AddObject("GeolocationPlatformPercentage", geolocationPlatformPercentage);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Image. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToImage(Image image)
        {
            base.AddObject("Image", image);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Merchants. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMerchants(Merchants merchants)
        {
            base.AddObject("Merchants", merchants);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Messages. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMessages(Messages messages)
        {
            base.AddObject("Messages", messages);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MoneyTransfers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMoneyTransfers(MoneyTransfers moneyTransfers)
        {
            base.AddObject("MoneyTransfers", moneyTransfers);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet News. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Order. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrder(Order order)
        {
            base.AddObject("Order", order);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrderContent. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrderContent(OrderContent orderContent)
        {
            base.AddObject("OrderContent", orderContent);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrderPerformed. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrderPerformed(OrderPerformed orderPerformed)
        {
            base.AddObject("OrderPerformed", orderPerformed);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrderThemes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrderThemes(OrderThemes orderThemes)
        {
            base.AddObject("OrderThemes", orderThemes);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PerformerPlatform. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPerformerPlatform(PerformerPlatform performerPlatform)
        {
            base.AddObject("PerformerPlatform", performerPlatform);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PerformerStatistics. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPerformerStatistics(PerformerStatistics performerStatistics)
        {
            base.AddObject("PerformerStatistics", performerStatistics);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Regions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRegions(Regions regions)
        {
            base.AddObject("Regions", regions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Roles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Themes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToThemes(Themes themes)
        {
            base.AddObject("Themes", themes);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Tickets. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTickets(Tickets tickets)
        {
            base.AddObject("Tickets", tickets);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TicketThemes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTicketThemes(TicketThemes ticketThemes)
        {
            base.AddObject("TicketThemes", ticketThemes);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Timezone. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTimezone(Timezone timezone)
        {
            base.AddObject("Timezone", timezone);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Transactions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransactions(Transactions transactions)
        {
            base.AddObject("Transactions", transactions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet User. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet UserMerchants. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUserMerchants(UserMerchants userMerchants)
        {
            base.AddObject("UserMerchants", userMerchants);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Video. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVideo(Video video)
        {
            base.AddObject("Video", video);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Wallet. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToWallet(Wallet wallet)
        {
            base.AddObject("Wallet", wallet);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet WhiteList. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToWhiteList(WhiteList whiteList)
        {
            base.AddObject("WhiteList", whiteList);
        }

        #endregion

        #region Импортируемые функции
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="schema_name">Нет доступной документации по метаданным.</param>
        /// <param name="is_verbose">Нет доступной документации по метаданным.</param>
        public int pr_CreateFkTreeDeleteTrigger(global::System.String schema_name, Nullable<global::System.Boolean> is_verbose)
        {
            ObjectParameter schema_nameParameter;
            if (schema_name != null)
            {
                schema_nameParameter = new ObjectParameter("schema_name", schema_name);
            }
            else
            {
                schema_nameParameter = new ObjectParameter("schema_name", typeof(global::System.String));
            }
    
            ObjectParameter is_verboseParameter;
            if (is_verbose.HasValue)
            {
                is_verboseParameter = new ObjectParameter("is_verbose", is_verbose);
            }
            else
            {
                is_verboseParameter = new ObjectParameter("is_verbose", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("pr_CreateFkTreeDeleteTrigger", schema_nameParameter, is_verboseParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="parent_table_id">Нет доступной документации по метаданным.</param>
        /// <param name="where_clause">Нет доступной документации по метаданным.</param>
        /// <param name="from_clause">Нет доступной документации по метаданным.</param>
        /// <param name="cascate_level">Нет доступной документации по метаданным.</param>
        /// <param name="is_verbose">Нет доступной документации по метаданным.</param>
        public int pr_FkTreeDelete(global::System.String parent_table_id, global::System.String where_clause, global::System.String from_clause, Nullable<global::System.Int32> cascate_level, Nullable<global::System.Boolean> is_verbose)
        {
            ObjectParameter parent_table_idParameter;
            if (parent_table_id != null)
            {
                parent_table_idParameter = new ObjectParameter("parent_table_id", parent_table_id);
            }
            else
            {
                parent_table_idParameter = new ObjectParameter("parent_table_id", typeof(global::System.String));
            }
    
            ObjectParameter where_clauseParameter;
            if (where_clause != null)
            {
                where_clauseParameter = new ObjectParameter("where_clause", where_clause);
            }
            else
            {
                where_clauseParameter = new ObjectParameter("where_clause", typeof(global::System.String));
            }
    
            ObjectParameter from_clauseParameter;
            if (from_clause != null)
            {
                from_clauseParameter = new ObjectParameter("from_clause", from_clause);
            }
            else
            {
                from_clauseParameter = new ObjectParameter("from_clause", typeof(global::System.String));
            }
    
            ObjectParameter cascate_levelParameter;
            if (cascate_level.HasValue)
            {
                cascate_levelParameter = new ObjectParameter("cascate_level", cascate_level);
            }
            else
            {
                cascate_levelParameter = new ObjectParameter("cascate_level", typeof(global::System.Int32));
            }
    
            ObjectParameter is_verboseParameter;
            if (is_verbose.HasValue)
            {
                is_verboseParameter = new ObjectParameter("is_verbose", is_verbose);
            }
            else
            {
                is_verboseParameter = new ObjectParameter("is_verbose", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("pr_FkTreeDelete", parent_table_idParameter, where_clauseParameter, from_clauseParameter, cascate_levelParameter, is_verboseParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public int pr_PopulateStaticData()
        {
            return base.ExecuteFunction("pr_PopulateStaticData");
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="diagramname">Нет доступной документации по метаданным.</param>
        /// <param name="owner_id">Нет доступной документации по метаданным.</param>
        /// <param name="version">Нет доступной документации по метаданным.</param>
        /// <param name="definition">Нет доступной документации по метаданным.</param>
        public int sp_alterdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="diagramname">Нет доступной документации по метаданным.</param>
        /// <param name="owner_id">Нет доступной документации по метаданным.</param>
        /// <param name="version">Нет доступной документации по метаданным.</param>
        /// <param name="definition">Нет доступной документации по метаданным.</param>
        public int sp_creatediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, Nullable<global::System.Int32> version, global::System.Byte[] definition)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter versionParameter;
            if (version.HasValue)
            {
                versionParameter = new ObjectParameter("version", version);
            }
            else
            {
                versionParameter = new ObjectParameter("version", typeof(global::System.Int32));
            }
    
            ObjectParameter definitionParameter;
            if (definition != null)
            {
                definitionParameter = new ObjectParameter("definition", definition);
            }
            else
            {
                definitionParameter = new ObjectParameter("definition", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="diagramname">Нет доступной документации по метаданным.</param>
        /// <param name="owner_id">Нет доступной документации по метаданным.</param>
        public int sp_dropdiagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="diagramname">Нет доступной документации по метаданным.</param>
        /// <param name="owner_id">Нет доступной документации по метаданным.</param>
        public ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="diagramname">Нет доступной документации по метаданным.</param>
        /// <param name="owner_id">Нет доступной документации по метаданным.</param>
        public ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(global::System.String diagramname, Nullable<global::System.Int32> owner_id)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="diagramname">Нет доступной документации по метаданным.</param>
        /// <param name="owner_id">Нет доступной документации по метаданным.</param>
        /// <param name="new_diagramname">Нет доступной документации по метаданным.</param>
        public int sp_renamediagram(global::System.String diagramname, Nullable<global::System.Int32> owner_id, global::System.String new_diagramname)
        {
            ObjectParameter diagramnameParameter;
            if (diagramname != null)
            {
                diagramnameParameter = new ObjectParameter("diagramname", diagramname);
            }
            else
            {
                diagramnameParameter = new ObjectParameter("diagramname", typeof(global::System.String));
            }
    
            ObjectParameter owner_idParameter;
            if (owner_id.HasValue)
            {
                owner_idParameter = new ObjectParameter("owner_id", owner_id);
            }
            else
            {
                owner_idParameter = new ObjectParameter("owner_id", typeof(global::System.Int32));
            }
    
            ObjectParameter new_diagramnameParameter;
            if (new_diagramname != null)
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", new_diagramname);
            }
            else
            {
                new_diagramnameParameter = new ObjectParameter("new_diagramname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public int sp_upgraddiagrams()
        {
            return base.ExecuteFunction("sp_upgraddiagrams");
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="AlertMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlertMessage : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AlertMessage.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static AlertMessage CreateAlertMessage(global::System.Int64 id)
        {
            AlertMessage alertMessage = new AlertMessage();
            alertMessage.Id = id;
            return alertMessage;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CreatorId
        {
            get
            {
                return _CreatorId;
            }
            set
            {
                OnCreatorIdChanging(value);
                ReportPropertyChanging("CreatorId");
                _CreatorId = StructuralObject.SetValidValue(value, "CreatorId");
                ReportPropertyChanged("CreatorId");
                OnCreatorIdChanged();
            }
        }
        private Nullable<global::System.Int64> _CreatorId;
        partial void OnCreatorIdChanging(Nullable<global::System.Int64> value);
        partial void OnCreatorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_AlertMessage_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_AlertMessage_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_AlertMessage_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_AlertMessage_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_AlertMessage_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Ban")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ban : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Ban.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Ban CreateBan(global::System.Int64 id)
        {
            Ban ban = new Ban();
            ban.Id = id;
            return ban;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private Nullable<global::System.Int64> _RoleId;
        partial void OnRoleIdChanging(Nullable<global::System.Int64> value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BanDateTime
        {
            get
            {
                return _BanDateTime;
            }
            set
            {
                OnBanDateTimeChanging(value);
                ReportPropertyChanging("BanDateTime");
                _BanDateTime = StructuralObject.SetValidValue(value, "BanDateTime");
                ReportPropertyChanged("BanDateTime");
                OnBanDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _BanDateTime;
        partial void OnBanDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnBanDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UnbanDateTime
        {
            get
            {
                return _UnbanDateTime;
            }
            set
            {
                OnUnbanDateTimeChanging(value);
                ReportPropertyChanging("UnbanDateTime");
                _UnbanDateTime = StructuralObject.SetValidValue(value, "UnbanDateTime");
                ReportPropertyChanged("UnbanDateTime");
                OnUnbanDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UnbanDateTime;
        partial void OnUnbanDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUnbanDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BanReason
        {
            get
            {
                return _BanReason;
            }
            set
            {
                OnBanReasonChanging(value);
                ReportPropertyChanging("BanReason");
                _BanReason = StructuralObject.SetValidValue(value, true, "BanReason");
                ReportPropertyChanged("BanReason");
                OnBanReasonChanged();
            }
        }
        private global::System.String _BanReason;
        partial void OnBanReasonChanging(global::System.String value);
        partial void OnBanReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnbanReason
        {
            get
            {
                return _UnbanReason;
            }
            set
            {
                OnUnbanReasonChanging(value);
                ReportPropertyChanging("UnbanReason");
                _UnbanReason = StructuralObject.SetValidValue(value, true, "UnbanReason");
                ReportPropertyChanged("UnbanReason");
                OnUnbanReasonChanged();
            }
        }
        private global::System.String _UnbanReason;
        partial void OnUnbanReasonChanging(global::System.String value);
        partial void OnUnbanReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanBeUnbanned
        {
            get
            {
                return _CanBeUnbanned;
            }
            set
            {
                OnCanBeUnbannedChanging(value);
                ReportPropertyChanging("CanBeUnbanned");
                _CanBeUnbanned = StructuralObject.SetValidValue(value, "CanBeUnbanned");
                ReportPropertyChanged("CanBeUnbanned");
                OnCanBeUnbannedChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanBeUnbanned;
        partial void OnCanBeUnbannedChanging(Nullable<global::System.Boolean> value);
        partial void OnCanBeUnbannedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AdminBanId
        {
            get
            {
                return _AdminBanId;
            }
            set
            {
                OnAdminBanIdChanging(value);
                ReportPropertyChanging("AdminBanId");
                _AdminBanId = StructuralObject.SetValidValue(value, "AdminBanId");
                ReportPropertyChanged("AdminBanId");
                OnAdminBanIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AdminBanId;
        partial void OnAdminBanIdChanging(Nullable<global::System.Int64> value);
        partial void OnAdminBanIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AdminUnbanId
        {
            get
            {
                return _AdminUnbanId;
            }
            set
            {
                OnAdminUnbanIdChanging(value);
                ReportPropertyChanging("AdminUnbanId");
                _AdminUnbanId = StructuralObject.SetValidValue(value, "AdminUnbanId");
                ReportPropertyChanged("AdminUnbanId");
                OnAdminUnbanIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AdminUnbanId;
        partial void OnAdminUnbanIdChanging(Nullable<global::System.Int64> value);
        partial void OnAdminUnbanIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_Roles", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VodadModel.FK_Ban_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VodadModel.FK_Ban_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VodadModel.FK_Ban_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("VodadModel.FK_Ban_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Ban_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Ban_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_User2", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User2", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ban_User2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Ban_User2", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="BlackList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlackList : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта BlackList.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static BlackList CreateBlackList(global::System.Int64 id)
        {
            BlackList blackList = new BlackList();
            blackList.Id = id;
            return blackList;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private Nullable<global::System.Int64> _OwnerId;
        partial void OnOwnerIdChanging(Nullable<global::System.Int64> value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_BlackList_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_BlackList_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_BlackList_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_BlackList_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_BlackList_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_BlackList_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_BlackList_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_BlackList_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_BlackList_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_BlackList_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="C__RefactorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__RefactorLog : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта C__RefactorLog.
        /// </summary>
        /// <param name="operationKey">Исходное значение свойства OperationKey.</param>
        public static C__RefactorLog CreateC__RefactorLog(global::System.Guid operationKey)
        {
            C__RefactorLog c__RefactorLog = new C__RefactorLog();
            c__RefactorLog.OperationKey = operationKey;
            return c__RefactorLog;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationKey
        {
            get
            {
                return _OperationKey;
            }
            set
            {
                if (_OperationKey != value)
                {
                    OnOperationKeyChanging(value);
                    ReportPropertyChanging("OperationKey");
                    _OperationKey = StructuralObject.SetValidValue(value, "OperationKey");
                    ReportPropertyChanged("OperationKey");
                    OnOperationKeyChanged();
                }
            }
        }
        private global::System.Guid _OperationKey;
        partial void OnOperationKeyChanging(global::System.Guid value);
        partial void OnOperationKeyChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Certificates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Certificates : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Certificates.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Certificates CreateCertificates(global::System.Int64 id)
        {
            Certificates certificates = new Certificates();
            certificates.Id = id;
            return certificates;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Certificates_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Certificates_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Certificates_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Certificates_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Certificates_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Cheaters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cheaters : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Cheaters.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Cheaters CreateCheaters(global::System.Int64 id)
        {
            Cheaters cheaters = new Cheaters();
            cheaters.Id = id;
            return cheaters;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Cheaters_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Cheaters_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Cheaters_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Cheaters_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Cheaters_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Geolocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Geolocation : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Geolocation.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Geolocation CreateGeolocation(global::System.Int64 id)
        {
            Geolocation geolocation = new Geolocation();
            geolocation.Id = id;
            return geolocation;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true, "CountryName");
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISO2
        {
            get
            {
                return _ISO2;
            }
            set
            {
                OnISO2Changing(value);
                ReportPropertyChanging("ISO2");
                _ISO2 = StructuralObject.SetValidValue(value, true, "ISO2");
                ReportPropertyChanged("ISO2");
                OnISO2Changed();
            }
        }
        private global::System.String _ISO2;
        partial void OnISO2Changing(global::System.String value);
        partial void OnISO2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LongCountryName
        {
            get
            {
                return _LongCountryName;
            }
            set
            {
                OnLongCountryNameChanging(value);
                ReportPropertyChanging("LongCountryName");
                _LongCountryName = StructuralObject.SetValidValue(value, true, "LongCountryName");
                ReportPropertyChanged("LongCountryName");
                OnLongCountryNameChanged();
            }
        }
        private global::System.String _LongCountryName;
        partial void OnLongCountryNameChanging(global::System.String value);
        partial void OnLongCountryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISO3
        {
            get
            {
                return _ISO3;
            }
            set
            {
                OnISO3Changing(value);
                ReportPropertyChanging("ISO3");
                _ISO3 = StructuralObject.SetValidValue(value, true, "ISO3");
                ReportPropertyChanged("ISO3");
                OnISO3Changed();
            }
        }
        private global::System.String _ISO3;
        partial void OnISO3Changing(global::System.String value);
        partial void OnISO3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NumCode
        {
            get
            {
                return _NumCode;
            }
            set
            {
                OnNumCodeChanging(value);
                ReportPropertyChanging("NumCode");
                _NumCode = StructuralObject.SetValidValue(value, true, "NumCode");
                ReportPropertyChanged("NumCode");
                OnNumCodeChanged();
            }
        }
        private global::System.String _NumCode;
        partial void OnNumCodeChanging(global::System.String value);
        partial void OnNumCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UNMemberState
        {
            get
            {
                return _UNMemberState;
            }
            set
            {
                OnUNMemberStateChanging(value);
                ReportPropertyChanging("UNMemberState");
                _UNMemberState = StructuralObject.SetValidValue(value, true, "UNMemberState");
                ReportPropertyChanged("UNMemberState");
                OnUNMemberStateChanged();
            }
        }
        private global::System.String _UNMemberState;
        partial void OnUNMemberStateChanging(global::System.String value);
        partial void OnUNMemberStateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CallingCode
        {
            get
            {
                return _CallingCode;
            }
            set
            {
                OnCallingCodeChanging(value);
                ReportPropertyChanging("CallingCode");
                _CallingCode = StructuralObject.SetValidValue(value, true, "CallingCode");
                ReportPropertyChanged("CallingCode");
                OnCallingCodeChanged();
            }
        }
        private global::System.String _CallingCode;
        partial void OnCallingCodeChanging(global::System.String value);
        partial void OnCallingCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CCTLD
        {
            get
            {
                return _CCTLD;
            }
            set
            {
                OnCCTLDChanging(value);
                ReportPropertyChanging("CCTLD");
                _CCTLD = StructuralObject.SetValidValue(value, true, "CCTLD");
                ReportPropertyChanged("CCTLD");
                OnCCTLDChanged();
            }
        }
        private global::System.String _CCTLD;
        partial void OnCCTLDChanging(global::System.String value);
        partial void OnCCTLDChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_GeolocationPlatformPercentage_Geolocation", "GeolocationPlatformPercentage")]
        public EntityCollection<GeolocationPlatformPercentage> GeolocationPlatformPercentage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeolocationPlatformPercentage>("VodadModel.FK_GeolocationPlatformPercentage_Geolocation", "GeolocationPlatformPercentage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeolocationPlatformPercentage>("VodadModel.FK_GeolocationPlatformPercentage_Geolocation", "GeolocationPlatformPercentage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="GeolocationPlatformPercentage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeolocationPlatformPercentage : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GeolocationPlatformPercentage.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="performerPlatformId">Исходное значение свойства PerformerPlatformId.</param>
        public static GeolocationPlatformPercentage CreateGeolocationPlatformPercentage(global::System.Int64 id, global::System.Int64 performerPlatformId)
        {
            GeolocationPlatformPercentage geolocationPlatformPercentage = new GeolocationPlatformPercentage();
            geolocationPlatformPercentage.Id = id;
            geolocationPlatformPercentage.PerformerPlatformId = performerPlatformId;
            return geolocationPlatformPercentage;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GeolocationId
        {
            get
            {
                return _GeolocationId;
            }
            set
            {
                OnGeolocationIdChanging(value);
                ReportPropertyChanging("GeolocationId");
                _GeolocationId = StructuralObject.SetValidValue(value, "GeolocationId");
                ReportPropertyChanged("GeolocationId");
                OnGeolocationIdChanged();
            }
        }
        private Nullable<global::System.Int64> _GeolocationId;
        partial void OnGeolocationIdChanging(Nullable<global::System.Int64> value);
        partial void OnGeolocationIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value, "Percentage");
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Int64> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Int64> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PerformerPlatformId
        {
            get
            {
                return _PerformerPlatformId;
            }
            set
            {
                OnPerformerPlatformIdChanging(value);
                ReportPropertyChanging("PerformerPlatformId");
                _PerformerPlatformId = StructuralObject.SetValidValue(value, "PerformerPlatformId");
                ReportPropertyChanged("PerformerPlatformId");
                OnPerformerPlatformIdChanged();
            }
        }
        private global::System.Int64 _PerformerPlatformId;
        partial void OnPerformerPlatformIdChanging(global::System.Int64 value);
        partial void OnPerformerPlatformIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_GeolocationPlatformPercentage_Geolocation", "Geolocation")]
        public Geolocation Geolocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Geolocation>("VodadModel.FK_GeolocationPlatformPercentage_Geolocation", "Geolocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Geolocation>("VodadModel.FK_GeolocationPlatformPercentage_Geolocation", "Geolocation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Geolocation> GeolocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Geolocation>("VodadModel.FK_GeolocationPlatformPercentage_Geolocation", "Geolocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Geolocation>("VodadModel.FK_GeolocationPlatformPercentage_Geolocation", "Geolocation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_GeolocationPlatformPercentagePerformerPlatform", "PerformerPlatform")]
        public PerformerPlatform PerformerPlatform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_GeolocationPlatformPercentagePerformerPlatform", "PerformerPlatform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_GeolocationPlatformPercentagePerformerPlatform", "PerformerPlatform").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformerPlatform> PerformerPlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_GeolocationPlatformPercentagePerformerPlatform", "PerformerPlatform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformerPlatform>("VodadModel.FK_GeolocationPlatformPercentagePerformerPlatform", "PerformerPlatform", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Image.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="imageName">Исходное значение свойства ImageName.</param>
        /// <param name="imageData">Исходное значение свойства ImageData.</param>
        /// <param name="imageSize">Исходное значение свойства ImageSize.</param>
        /// <param name="creationDate">Исходное значение свойства CreationDate.</param>
        public static Image CreateImage(global::System.Int64 id, global::System.Int64 userId, global::System.String imageName, global::System.Byte[] imageData, global::System.Int64 imageSize, global::System.DateTime creationDate)
        {
            Image image = new Image();
            image.Id = id;
            image.UserId = userId;
            image.ImageName = imageName;
            image.ImageData = imageData;
            image.ImageSize = imageSize;
            image.CreationDate = creationDate;
            return image;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false, "ImageName");
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageData
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageData);
            }
            set
            {
                OnImageDataChanging(value);
                ReportPropertyChanging("ImageData");
                _ImageData = StructuralObject.SetValidValue(value, false, "ImageData");
                ReportPropertyChanged("ImageData");
                OnImageDataChanged();
            }
        }
        private global::System.Byte[] _ImageData;
        partial void OnImageDataChanging(global::System.Byte[] value);
        partial void OnImageDataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ImageSize
        {
            get
            {
                return _ImageSize;
            }
            set
            {
                OnImageSizeChanging(value);
                ReportPropertyChanging("ImageSize");
                _ImageSize = StructuralObject.SetValidValue(value, "ImageSize");
                ReportPropertyChanged("ImageSize");
                OnImageSizeChanged();
            }
        }
        private global::System.Int64 _ImageSize;
        partial void OnImageSizeChanging(global::System.Int64 value);
        partial void OnImageSizeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImageWidth
        {
            get
            {
                return _ImageWidth;
            }
            set
            {
                OnImageWidthChanging(value);
                ReportPropertyChanging("ImageWidth");
                _ImageWidth = StructuralObject.SetValidValue(value, "ImageWidth");
                ReportPropertyChanged("ImageWidth");
                OnImageWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _ImageWidth;
        partial void OnImageWidthChanging(Nullable<global::System.Int32> value);
        partial void OnImageWidthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImageHeight
        {
            get
            {
                return _ImageHeight;
            }
            set
            {
                OnImageHeightChanging(value);
                ReportPropertyChanging("ImageHeight");
                _ImageHeight = StructuralObject.SetValidValue(value, "ImageHeight");
                ReportPropertyChanged("ImageHeight");
                OnImageHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _ImageHeight;
        partial void OnImageHeightChanging(Nullable<global::System.Int32> value);
        partial void OnImageHeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, true, "Extension");
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Image_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Image_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Image_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Image_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Image_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderContent_Image", "OrderContent")]
        public EntityCollection<OrderContent> OrderContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderContent>("VodadModel.FK_OrderContent_Image", "OrderContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderContent>("VodadModel.FK_OrderContent_Image", "OrderContent", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_Image", "Tickets")]
        public EntityCollection<Tickets> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tickets>("VodadModel.FK_Ticket_Image", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tickets>("VodadModel.FK_Ticket_Image", "Tickets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Merchants")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Merchants : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Merchants.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Merchants CreateMerchants(global::System.Int64 id)
        {
            Merchants merchants = new Merchants();
            merchants.Id = id;
            return merchants;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MerchantName
        {
            get
            {
                return _MerchantName;
            }
            set
            {
                OnMerchantNameChanging(value);
                ReportPropertyChanging("MerchantName");
                _MerchantName = StructuralObject.SetValidValue(value, true, "MerchantName");
                ReportPropertyChanged("MerchantName");
                OnMerchantNameChanged();
            }
        }
        private global::System.String _MerchantName;
        partial void OnMerchantNameChanging(global::System.String value);
        partial void OnMerchantNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_MoneyTransfers_Merchants", "MoneyTransfers")]
        public EntityCollection<MoneyTransfers> MoneyTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MoneyTransfers>("VodadModel.FK_MoneyTransfers_Merchants", "MoneyTransfers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MoneyTransfers>("VodadModel.FK_MoneyTransfers_Merchants", "MoneyTransfers", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_UserMerchants_Merchants", "UserMerchants")]
        public EntityCollection<UserMerchants> UserMerchants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMerchants>("VodadModel.FK_UserMerchants_Merchants", "UserMerchants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMerchants>("VodadModel.FK_UserMerchants_Merchants", "UserMerchants", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Messages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Messages : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Messages.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Messages CreateMessages(global::System.Int64 id)
        {
            Messages messages = new Messages();
            messages.Id = id;
            return messages;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value, "FromUserId");
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _FromUserId;
        partial void OnFromUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value, "ToUserId");
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ToUserId;
        partial void OnToUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, true, "MessageText");
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value, "IsRead");
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRead;
        partial void OnIsReadChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReadChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageTitle
        {
            get
            {
                return _MessageTitle;
            }
            set
            {
                OnMessageTitleChanging(value);
                ReportPropertyChanging("MessageTitle");
                _MessageTitle = StructuralObject.SetValidValue(value, true, "MessageTitle");
                ReportPropertyChanged("MessageTitle");
                OnMessageTitleChanged();
            }
        }
        private global::System.String _MessageTitle;
        partial void OnMessageTitleChanging(global::System.String value);
        partial void OnMessageTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeletedForAuthor
        {
            get
            {
                return _IsDeletedForAuthor;
            }
            set
            {
                OnIsDeletedForAuthorChanging(value);
                ReportPropertyChanging("IsDeletedForAuthor");
                _IsDeletedForAuthor = StructuralObject.SetValidValue(value, "IsDeletedForAuthor");
                ReportPropertyChanged("IsDeletedForAuthor");
                OnIsDeletedForAuthorChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeletedForAuthor;
        partial void OnIsDeletedForAuthorChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedForAuthorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeletedForReciever
        {
            get
            {
                return _IsDeletedForReciever;
            }
            set
            {
                OnIsDeletedForRecieverChanging(value);
                ReportPropertyChanging("IsDeletedForReciever");
                _IsDeletedForReciever = StructuralObject.SetValidValue(value, "IsDeletedForReciever");
                ReportPropertyChanged("IsDeletedForReciever");
                OnIsDeletedForRecieverChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeletedForReciever;
        partial void OnIsDeletedForRecieverChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedForRecieverChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Messages_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Messages_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Messages_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Messages_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Messages_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Messages_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Messages_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Messages_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Messages_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Messages_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="MoneyTransfers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MoneyTransfers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MoneyTransfers.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static MoneyTransfers CreateMoneyTransfers(global::System.Int64 id)
        {
            MoneyTransfers moneyTransfers = new MoneyTransfers();
            moneyTransfers.Id = id;
            return moneyTransfers;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value, "DateTime");
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTime;
        partial void OnDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MerchantId
        {
            get
            {
                return _MerchantId;
            }
            set
            {
                OnMerchantIdChanging(value);
                ReportPropertyChanging("MerchantId");
                _MerchantId = StructuralObject.SetValidValue(value, "MerchantId");
                ReportPropertyChanged("MerchantId");
                OnMerchantIdChanged();
            }
        }
        private Nullable<global::System.Int64> _MerchantId;
        partial void OnMerchantIdChanging(Nullable<global::System.Int64> value);
        partial void OnMerchantIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountMerchantSystem
        {
            get
            {
                return _AccountMerchantSystem;
            }
            set
            {
                OnAccountMerchantSystemChanging(value);
                ReportPropertyChanging("AccountMerchantSystem");
                _AccountMerchantSystem = StructuralObject.SetValidValue(value, true, "AccountMerchantSystem");
                ReportPropertyChanged("AccountMerchantSystem");
                OnAccountMerchantSystemChanged();
            }
        }
        private global::System.String _AccountMerchantSystem;
        partial void OnAccountMerchantSystemChanging(global::System.String value);
        partial void OnAccountMerchantSystemChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value, true, "TransactionId");
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.String _TransactionId;
        partial void OnTransactionIdChanging(global::System.String value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusDescription
        {
            get
            {
                return _StatusDescription;
            }
            set
            {
                OnStatusDescriptionChanging(value);
                ReportPropertyChanging("StatusDescription");
                _StatusDescription = StructuralObject.SetValidValue(value, true, "StatusDescription");
                ReportPropertyChanged("StatusDescription");
                OnStatusDescriptionChanged();
            }
        }
        private global::System.String _StatusDescription;
        partial void OnStatusDescriptionChanging(global::System.String value);
        partial void OnStatusDescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_MoneyTransfers_Merchants", "Merchants")]
        public Merchants Merchants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Merchants>("VodadModel.FK_MoneyTransfers_Merchants", "Merchants").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Merchants>("VodadModel.FK_MoneyTransfers_Merchants", "Merchants").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Merchants> MerchantsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Merchants>("VodadModel.FK_MoneyTransfers_Merchants", "Merchants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Merchants>("VodadModel.FK_MoneyTransfers_Merchants", "Merchants", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_MoneyTransfers_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_MoneyTransfers_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_MoneyTransfers_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_MoneyTransfers_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_MoneyTransfers_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта News.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static News CreateNews(global::System.Int64 id)
        {
            News news = new News();
            news.Id = id;
            return news;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CreatorId
        {
            get
            {
                return _CreatorId;
            }
            set
            {
                OnCreatorIdChanging(value);
                ReportPropertyChanging("CreatorId");
                _CreatorId = StructuralObject.SetValidValue(value, "CreatorId");
                ReportPropertyChanged("CreatorId");
                OnCreatorIdChanged();
            }
        }
        private Nullable<global::System.Int64> _CreatorId;
        partial void OnCreatorIdChanging(Nullable<global::System.Int64> value);
        partial void OnCreatorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text1
        {
            get
            {
                return _Text1;
            }
            set
            {
                OnText1Changing(value);
                ReportPropertyChanging("Text1");
                _Text1 = StructuralObject.SetValidValue(value, true, "Text1");
                ReportPropertyChanged("Text1");
                OnText1Changed();
            }
        }
        private global::System.String _Text1;
        partial void OnText1Changing(global::System.String value);
        partial void OnText1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text2
        {
            get
            {
                return _Text2;
            }
            set
            {
                OnText2Changing(value);
                ReportPropertyChanging("Text2");
                _Text2 = StructuralObject.SetValidValue(value, true, "Text2");
                ReportPropertyChanged("Text2");
                OnText2Changed();
            }
        }
        private global::System.String _Text2;
        partial void OnText2Changing(global::System.String value);
        partial void OnText2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_News_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_News_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_News_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_News_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_News_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Order.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Order CreateOrder(global::System.Int64 id)
        {
            Order order = new Order();
            order.Id = id;
            return order;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value, "ExpireDate");
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                OnRegionIdChanging(value);
                ReportPropertyChanging("RegionId");
                _RegionId = StructuralObject.SetValidValue(value, "RegionId");
                ReportPropertyChanged("RegionId");
                OnRegionIdChanged();
            }
        }
        private Nullable<global::System.Int64> _RegionId;
        partial void OnRegionIdChanging(Nullable<global::System.Int64> value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Order_Regions", "Regions")]
        public Regions Regions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regions>("VodadModel.FK_Order_Regions", "Regions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regions>("VodadModel.FK_Order_Regions", "Regions").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Regions> RegionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regions>("VodadModel.FK_Order_Regions", "Regions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Regions>("VodadModel.FK_Order_Regions", "Regions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Order_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Order_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Order_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Order_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Order_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderContent_Order", "OrderContent")]
        public EntityCollection<OrderContent> OrderContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderContent>("VodadModel.FK_OrderContent_Order", "OrderContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderContent>("VodadModel.FK_OrderContent_Order", "OrderContent", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderThemes_Order", "OrderThemes")]
        public EntityCollection<OrderThemes> OrderThemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderThemes>("VodadModel.FK_OrderThemes_Order", "OrderThemes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderThemes>("VodadModel.FK_OrderThemes_Order", "OrderThemes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="OrderContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderContent : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderContent.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="idOrder">Исходное значение свойства IdOrder.</param>
        /// <param name="idContent">Исходное значение свойства IdContent.</param>
        public static OrderContent CreateOrderContent(global::System.Int64 id, global::System.Int64 idOrder, global::System.Int64 idContent)
        {
            OrderContent orderContent = new OrderContent();
            orderContent.Id = id;
            orderContent.IdOrder = idOrder;
            orderContent.IdContent = idContent;
            return orderContent;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdOrder
        {
            get
            {
                return _IdOrder;
            }
            set
            {
                OnIdOrderChanging(value);
                ReportPropertyChanging("IdOrder");
                _IdOrder = StructuralObject.SetValidValue(value, "IdOrder");
                ReportPropertyChanged("IdOrder");
                OnIdOrderChanged();
            }
        }
        private global::System.Int64 _IdOrder;
        partial void OnIdOrderChanging(global::System.Int64 value);
        partial void OnIdOrderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdContent
        {
            get
            {
                return _IdContent;
            }
            set
            {
                OnIdContentChanging(value);
                ReportPropertyChanging("IdContent");
                _IdContent = StructuralObject.SetValidValue(value, "IdContent");
                ReportPropertyChanged("IdContent");
                OnIdContentChanged();
            }
        }
        private global::System.Int64 _IdContent;
        partial void OnIdContentChanging(global::System.Int64 value);
        partial void OnIdContentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, true, "ContentType");
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderContent_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("VodadModel.FK_OrderContent_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("VodadModel.FK_OrderContent_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("VodadModel.FK_OrderContent_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("VodadModel.FK_OrderContent_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderPerformed_OrderImages", "OrderPerformed")]
        public EntityCollection<OrderPerformed> OrderPerformed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderPerformed>("VodadModel.FK_OrderPerformed_OrderImages", "OrderPerformed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderPerformed>("VodadModel.FK_OrderPerformed_OrderImages", "OrderPerformed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="OrderPerformed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderPerformed : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderPerformed.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="authorId">Исходное значение свойства AuthorId.</param>
        public static OrderPerformed CreateOrderPerformed(global::System.Int64 id, global::System.Int64 authorId)
        {
            OrderPerformed orderPerformed = new OrderPerformed();
            orderPerformed.Id = id;
            orderPerformed.AuthorId = authorId;
            return orderPerformed;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MoneyPaid
        {
            get
            {
                return _MoneyPaid;
            }
            set
            {
                OnMoneyPaidChanging(value);
                ReportPropertyChanging("MoneyPaid");
                _MoneyPaid = StructuralObject.SetValidValue(value, "MoneyPaid");
                ReportPropertyChanged("MoneyPaid");
                OnMoneyPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _MoneyPaid;
        partial void OnMoneyPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnMoneyPaidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OrderContentId
        {
            get
            {
                return _OrderContentId;
            }
            set
            {
                OnOrderContentIdChanging(value);
                ReportPropertyChanging("OrderContentId");
                _OrderContentId = StructuralObject.SetValidValue(value, "OrderContentId");
                ReportPropertyChanged("OrderContentId");
                OnOrderContentIdChanged();
            }
        }
        private Nullable<global::System.Int64> _OrderContentId;
        partial void OnOrderContentIdChanging(Nullable<global::System.Int64> value);
        partial void OnOrderContentIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value, "AuthorId");
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int64 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int64 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLiked
        {
            get
            {
                return _IsLiked;
            }
            set
            {
                OnIsLikedChanging(value);
                ReportPropertyChanging("IsLiked");
                _IsLiked = StructuralObject.SetValidValue(value, "IsLiked");
                ReportPropertyChanged("IsLiked");
                OnIsLikedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLiked;
        partial void OnIsLikedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLikedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PerformerPlatformId
        {
            get
            {
                return _PerformerPlatformId;
            }
            set
            {
                OnPerformerPlatformIdChanging(value);
                ReportPropertyChanging("PerformerPlatformId");
                _PerformerPlatformId = StructuralObject.SetValidValue(value, "PerformerPlatformId");
                ReportPropertyChanged("PerformerPlatformId");
                OnPerformerPlatformIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PerformerPlatformId;
        partial void OnPerformerPlatformIdChanging(Nullable<global::System.Int64> value);
        partial void OnPerformerPlatformIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoLink
        {
            get
            {
                return _VideoLink;
            }
            set
            {
                OnVideoLinkChanging(value);
                ReportPropertyChanging("VideoLink");
                _VideoLink = StructuralObject.SetValidValue(value, true, "VideoLink");
                ReportPropertyChanged("VideoLink");
                OnVideoLinkChanged();
            }
        }
        private global::System.String _VideoLink;
        partial void OnVideoLinkChanging(global::System.String value);
        partial void OnVideoLinkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastStatusChangeDateTime
        {
            get
            {
                return _LastStatusChangeDateTime;
            }
            set
            {
                OnLastStatusChangeDateTimeChanging(value);
                ReportPropertyChanging("LastStatusChangeDateTime");
                _LastStatusChangeDateTime = StructuralObject.SetValidValue(value, "LastStatusChangeDateTime");
                ReportPropertyChanged("LastStatusChangeDateTime");
                OnLastStatusChangeDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastStatusChangeDateTime;
        partial void OnLastStatusChangeDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastStatusChangeDateTimeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderPerformed_OrderImages", "OrderContent")]
        public OrderContent OrderContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderContent>("VodadModel.FK_OrderPerformed_OrderImages", "OrderContent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderContent>("VodadModel.FK_OrderPerformed_OrderImages", "OrderContent").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderContent> OrderContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderContent>("VodadModel.FK_OrderPerformed_OrderImages", "OrderContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderContent>("VodadModel.FK_OrderPerformed_OrderImages", "OrderContent", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderPerformed_PerformerPlatform", "PerformerPlatform")]
        public PerformerPlatform PerformerPlatform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_OrderPerformed_PerformerPlatform", "PerformerPlatform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_OrderPerformed_PerformerPlatform", "PerformerPlatform").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformerPlatform> PerformerPlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_OrderPerformed_PerformerPlatform", "PerformerPlatform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformerPlatform>("VodadModel.FK_OrderPerformed_PerformerPlatform", "PerformerPlatform", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderPerformed_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_OrderPerformed_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_OrderPerformed_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_OrderPerformed_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_OrderPerformed_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="OrderThemes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderThemes : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderThemes.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static OrderThemes CreateOrderThemes(global::System.Int64 id)
        {
            OrderThemes orderThemes = new OrderThemes();
            orderThemes.Id = id;
            return orderThemes;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value, "OrderId");
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private Nullable<global::System.Int64> _OrderId;
        partial void OnOrderIdChanging(Nullable<global::System.Int64> value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ThemeId
        {
            get
            {
                return _ThemeId;
            }
            set
            {
                OnThemeIdChanging(value);
                ReportPropertyChanging("ThemeId");
                _ThemeId = StructuralObject.SetValidValue(value, "ThemeId");
                ReportPropertyChanged("ThemeId");
                OnThemeIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ThemeId;
        partial void OnThemeIdChanging(Nullable<global::System.Int64> value);
        partial void OnThemeIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderThemes_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("VodadModel.FK_OrderThemes_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("VodadModel.FK_OrderThemes_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("VodadModel.FK_OrderThemes_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("VodadModel.FK_OrderThemes_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderThemes_Theme", "Themes")]
        public Themes Themes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Themes>("VodadModel.FK_OrderThemes_Theme", "Themes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Themes>("VodadModel.FK_OrderThemes_Theme", "Themes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Themes> ThemesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Themes>("VodadModel.FK_OrderThemes_Theme", "Themes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Themes>("VodadModel.FK_OrderThemes_Theme", "Themes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="PerformerPlatform")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformerPlatform : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PerformerPlatform.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static PerformerPlatform CreatePerformerPlatform(global::System.Int64 id)
        {
            PerformerPlatform performerPlatform = new PerformerPlatform();
            performerPlatform.Id = id;
            return performerPlatform;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PerformerId
        {
            get
            {
                return _PerformerId;
            }
            set
            {
                OnPerformerIdChanging(value);
                ReportPropertyChanging("PerformerId");
                _PerformerId = StructuralObject.SetValidValue(value, "PerformerId");
                ReportPropertyChanged("PerformerId");
                OnPerformerIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PerformerId;
        partial void OnPerformerIdChanging(Nullable<global::System.Int64> value);
        partial void OnPerformerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, true, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ThemeId
        {
            get
            {
                return _ThemeId;
            }
            set
            {
                OnThemeIdChanging(value);
                ReportPropertyChanging("ThemeId");
                _ThemeId = StructuralObject.SetValidValue(value, "ThemeId");
                ReportPropertyChanged("ThemeId");
                OnThemeIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ThemeId;
        partial void OnThemeIdChanging(Nullable<global::System.Int64> value);
        partial void OnThemeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value, true, "Verified");
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private global::System.String _Verified;
        partial void OnVerifiedChanging(global::System.String value);
        partial void OnVerifiedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastOnlineDateTime
        {
            get
            {
                return _LastOnlineDateTime;
            }
            set
            {
                OnLastOnlineDateTimeChanging(value);
                ReportPropertyChanging("LastOnlineDateTime");
                _LastOnlineDateTime = StructuralObject.SetValidValue(value, "LastOnlineDateTime");
                ReportPropertyChanged("LastOnlineDateTime");
                OnLastOnlineDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastOnlineDateTime;
        partial void OnLastOnlineDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastOnlineDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, true, "Link");
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChannelName
        {
            get
            {
                return _ChannelName;
            }
            set
            {
                OnChannelNameChanging(value);
                ReportPropertyChanging("ChannelName");
                _ChannelName = StructuralObject.SetValidValue(value, true, "ChannelName");
                ReportPropertyChanged("ChannelName");
                OnChannelNameChanged();
            }
        }
        private global::System.String _ChannelName;
        partial void OnChannelNameChanging(global::System.String value);
        partial void OnChannelNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VideoPrice
        {
            get
            {
                return _VideoPrice;
            }
            set
            {
                OnVideoPriceChanging(value);
                ReportPropertyChanging("VideoPrice");
                _VideoPrice = StructuralObject.SetValidValue(value, "VideoPrice");
                ReportPropertyChanged("VideoPrice");
                OnVideoPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _VideoPrice;
        partial void OnVideoPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnVideoPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LogoPrice
        {
            get
            {
                return _LogoPrice;
            }
            set
            {
                OnLogoPriceChanging(value);
                ReportPropertyChanging("LogoPrice");
                _LogoPrice = StructuralObject.SetValidValue(value, "LogoPrice");
                ReportPropertyChanged("LogoPrice");
                OnLogoPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _LogoPrice;
        partial void OnLogoPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnLogoPriceChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_GeolocationPlatformPercentagePerformerPlatform", "GeolocationPlatformPercentage")]
        public EntityCollection<GeolocationPlatformPercentage> GeolocationPlatformPercentage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeolocationPlatformPercentage>("VodadModel.FK_GeolocationPlatformPercentagePerformerPlatform", "GeolocationPlatformPercentage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeolocationPlatformPercentage>("VodadModel.FK_GeolocationPlatformPercentagePerformerPlatform", "GeolocationPlatformPercentage", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderPerformed_PerformerPlatform", "OrderPerformed")]
        public EntityCollection<OrderPerformed> OrderPerformed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderPerformed>("VodadModel.FK_OrderPerformed_PerformerPlatform", "OrderPerformed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderPerformed>("VodadModel.FK_OrderPerformed_PerformerPlatform", "OrderPerformed", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_PerformerPlatform_Themes", "Themes")]
        public Themes Themes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Themes>("VodadModel.FK_PerformerPlatform_Themes", "Themes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Themes>("VodadModel.FK_PerformerPlatform_Themes", "Themes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Themes> ThemesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Themes>("VodadModel.FK_PerformerPlatform_Themes", "Themes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Themes>("VodadModel.FK_PerformerPlatform_Themes", "Themes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_PerformerPlatform_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_PerformerPlatform_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_PerformerPlatform_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_PerformerPlatform_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_PerformerPlatform_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerStatistics")]
        public EntityCollection<PerformerStatistics> PerformerStatistics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformerStatistics>("VodadModel.FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerStatistics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformerStatistics>("VodadModel.FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerStatistics", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="PerformerStatistics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformerStatistics : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PerformerStatistics.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="dateModified">Исходное значение свойства DateModified.</param>
        public static PerformerStatistics CreatePerformerStatistics(global::System.Int64 id, global::System.DateTime dateModified)
        {
            PerformerStatistics performerStatistics = new PerformerStatistics();
            performerStatistics.Id = id;
            performerStatistics.DateModified = dateModified;
            return performerStatistics;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PerformerPlatformId
        {
            get
            {
                return _PerformerPlatformId;
            }
            set
            {
                OnPerformerPlatformIdChanging(value);
                ReportPropertyChanging("PerformerPlatformId");
                _PerformerPlatformId = StructuralObject.SetValidValue(value, "PerformerPlatformId");
                ReportPropertyChanged("PerformerPlatformId");
                OnPerformerPlatformIdChanged();
            }
        }
        private Nullable<global::System.Int64> _PerformerPlatformId;
        partial void OnPerformerPlatformIdChanging(Nullable<global::System.Int64> value);
        partial void OnPerformerPlatformIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AverageViewerCountPerHour
        {
            get
            {
                return _AverageViewerCountPerHour;
            }
            set
            {
                OnAverageViewerCountPerHourChanging(value);
                ReportPropertyChanging("AverageViewerCountPerHour");
                _AverageViewerCountPerHour = StructuralObject.SetValidValue(value, "AverageViewerCountPerHour");
                ReportPropertyChanged("AverageViewerCountPerHour");
                OnAverageViewerCountPerHourChanged();
            }
        }
        private Nullable<global::System.Int64> _AverageViewerCountPerHour;
        partial void OnAverageViewerCountPerHourChanging(Nullable<global::System.Int64> value);
        partial void OnAverageViewerCountPerHourChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MaxViewersCount
        {
            get
            {
                return _MaxViewersCount;
            }
            set
            {
                OnMaxViewersCountChanging(value);
                ReportPropertyChanging("MaxViewersCount");
                _MaxViewersCount = StructuralObject.SetValidValue(value, "MaxViewersCount");
                ReportPropertyChanged("MaxViewersCount");
                OnMaxViewersCountChanged();
            }
        }
        private Nullable<global::System.Int64> _MaxViewersCount;
        partial void OnMaxViewersCountChanging(Nullable<global::System.Int64> value);
        partial void OnMaxViewersCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalUniqueViews
        {
            get
            {
                return _TotalUniqueViews;
            }
            set
            {
                OnTotalUniqueViewsChanging(value);
                ReportPropertyChanging("TotalUniqueViews");
                _TotalUniqueViews = StructuralObject.SetValidValue(value, "TotalUniqueViews");
                ReportPropertyChanged("TotalUniqueViews");
                OnTotalUniqueViewsChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalUniqueViews;
        partial void OnTotalUniqueViewsChanging(Nullable<global::System.Int64> value);
        partial void OnTotalUniqueViewsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalFollowers
        {
            get
            {
                return _TotalFollowers;
            }
            set
            {
                OnTotalFollowersChanging(value);
                ReportPropertyChanging("TotalFollowers");
                _TotalFollowers = StructuralObject.SetValidValue(value, "TotalFollowers");
                ReportPropertyChanged("TotalFollowers");
                OnTotalFollowersChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalFollowers;
        partial void OnTotalFollowersChanging(Nullable<global::System.Int64> value);
        partial void OnTotalFollowersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalViews
        {
            get
            {
                return _TotalViews;
            }
            set
            {
                OnTotalViewsChanging(value);
                ReportPropertyChanging("TotalViews");
                _TotalViews = StructuralObject.SetValidValue(value, "TotalViews");
                ReportPropertyChanged("TotalViews");
                OnTotalViewsChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalViews;
        partial void OnTotalViewsChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalViewsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Likes
        {
            get
            {
                return _Likes;
            }
            set
            {
                OnLikesChanging(value);
                ReportPropertyChanging("Likes");
                _Likes = StructuralObject.SetValidValue(value, "Likes");
                ReportPropertyChanged("Likes");
                OnLikesChanged();
            }
        }
        private Nullable<global::System.Int64> _Likes;
        partial void OnLikesChanging(Nullable<global::System.Int64> value);
        partial void OnLikesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CompletedOrders
        {
            get
            {
                return _CompletedOrders;
            }
            set
            {
                OnCompletedOrdersChanging(value);
                ReportPropertyChanging("CompletedOrders");
                _CompletedOrders = StructuralObject.SetValidValue(value, "CompletedOrders");
                ReportPropertyChanged("CompletedOrders");
                OnCompletedOrdersChanged();
            }
        }
        private Nullable<global::System.Int64> _CompletedOrders;
        partial void OnCompletedOrdersChanging(Nullable<global::System.Int64> value);
        partial void OnCompletedOrdersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TotalOrders
        {
            get
            {
                return _TotalOrders;
            }
            set
            {
                OnTotalOrdersChanging(value);
                ReportPropertyChanging("TotalOrders");
                _TotalOrders = StructuralObject.SetValidValue(value, "TotalOrders");
                ReportPropertyChanged("TotalOrders");
                OnTotalOrdersChanged();
            }
        }
        private Nullable<global::System.Int64> _TotalOrders;
        partial void OnTotalOrdersChanging(Nullable<global::System.Int64> value);
        partial void OnTotalOrdersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AverageComplitionSpeed
        {
            get
            {
                return _AverageComplitionSpeed;
            }
            set
            {
                OnAverageComplitionSpeedChanging(value);
                ReportPropertyChanging("AverageComplitionSpeed");
                _AverageComplitionSpeed = StructuralObject.SetValidValue(value, "AverageComplitionSpeed");
                ReportPropertyChanged("AverageComplitionSpeed");
                OnAverageComplitionSpeedChanged();
            }
        }
        private Nullable<global::System.Decimal> _AverageComplitionSpeed;
        partial void OnAverageComplitionSpeedChanging(Nullable<global::System.Decimal> value);
        partial void OnAverageComplitionSpeedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value, "DateModified");
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UniqueViewersForMonth
        {
            get
            {
                return _UniqueViewersForMonth;
            }
            set
            {
                OnUniqueViewersForMonthChanging(value);
                ReportPropertyChanging("UniqueViewersForMonth");
                _UniqueViewersForMonth = StructuralObject.SetValidValue(value, "UniqueViewersForMonth");
                ReportPropertyChanged("UniqueViewersForMonth");
                OnUniqueViewersForMonthChanged();
            }
        }
        private Nullable<global::System.Int64> _UniqueViewersForMonth;
        partial void OnUniqueViewersForMonthChanging(Nullable<global::System.Int64> value);
        partial void OnUniqueViewersForMonthChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerPlatform")]
        public PerformerPlatform PerformerPlatform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerPlatform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerPlatform").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformerPlatform> PerformerPlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformerPlatform>("VodadModel.FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerPlatform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformerPlatform>("VodadModel.FK_PerformerStatistics_GeolocationPlatformPercentage", "PerformerPlatform", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Regions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Regions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Regions.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Regions CreateRegions(global::System.Int64 id)
        {
            Regions regions = new Regions();
            regions.Id = id;
            return regions;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, true, "RegionName");
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Order_Regions", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("VodadModel.FK_Order_Regions", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("VodadModel.FK_Order_Regions", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Roles.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Roles CreateRoles(global::System.Int64 id)
        {
            Roles roles = new Roles();
            roles.Id = id;
            return roles;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_Roles", "Ban")]
        public EntityCollection<Ban> Ban
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ban>("VodadModel.FK_Ban_Roles", "Ban");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ban>("VodadModel.FK_Ban_Roles", "Ban", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_User_Roles", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("VodadModel.FK_User_Roles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("VodadModel.FK_User_Roles", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Themes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Themes : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Themes.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Themes CreateThemes(global::System.Int64 id)
        {
            Themes themes = new Themes();
            themes.Id = id;
            return themes;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderThemes_Theme", "OrderThemes")]
        public EntityCollection<OrderThemes> OrderThemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderThemes>("VodadModel.FK_OrderThemes_Theme", "OrderThemes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderThemes>("VodadModel.FK_OrderThemes_Theme", "OrderThemes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_PerformerPlatform_Themes", "PerformerPlatform")]
        public EntityCollection<PerformerPlatform> PerformerPlatform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformerPlatform>("VodadModel.FK_PerformerPlatform_Themes", "PerformerPlatform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformerPlatform>("VodadModel.FK_PerformerPlatform_Themes", "PerformerPlatform", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Tickets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tickets : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Tickets.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Tickets CreateTickets(global::System.Int64 id)
        {
            Tickets tickets = new Tickets();
            tickets.Id = id;
            return tickets;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ThemeId
        {
            get
            {
                return _ThemeId;
            }
            set
            {
                OnThemeIdChanging(value);
                ReportPropertyChanging("ThemeId");
                _ThemeId = StructuralObject.SetValidValue(value, "ThemeId");
                ReportPropertyChanged("ThemeId");
                OnThemeIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ThemeId;
        partial void OnThemeIdChanging(Nullable<global::System.Int64> value);
        partial void OnThemeIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text1
        {
            get
            {
                return _Text1;
            }
            set
            {
                OnText1Changing(value);
                ReportPropertyChanging("Text1");
                _Text1 = StructuralObject.SetValidValue(value, true, "Text1");
                ReportPropertyChanged("Text1");
                OnText1Changed();
            }
        }
        private global::System.String _Text1;
        partial void OnText1Changing(global::System.String value);
        partial void OnText1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text2
        {
            get
            {
                return _Text2;
            }
            set
            {
                OnText2Changing(value);
                ReportPropertyChanging("Text2");
                _Text2 = StructuralObject.SetValidValue(value, true, "Text2");
                ReportPropertyChanged("Text2");
                OnText2Changed();
            }
        }
        private global::System.String _Text2;
        partial void OnText2Changing(global::System.String value);
        partial void OnText2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text3
        {
            get
            {
                return _Text3;
            }
            set
            {
                OnText3Changing(value);
                ReportPropertyChanging("Text3");
                _Text3 = StructuralObject.SetValidValue(value, true, "Text3");
                ReportPropertyChanged("Text3");
                OnText3Changed();
            }
        }
        private global::System.String _Text3;
        partial void OnText3Changing(global::System.String value);
        partial void OnText3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                OnImageIdChanging(value);
                ReportPropertyChanging("ImageId");
                _ImageId = StructuralObject.SetValidValue(value, "ImageId");
                ReportPropertyChanged("ImageId");
                OnImageIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ImageId;
        partial void OnImageIdChanging(Nullable<global::System.Int64> value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerDate
        {
            get
            {
                return _AnswerDate;
            }
            set
            {
                OnAnswerDateChanging(value);
                ReportPropertyChanging("AnswerDate");
                _AnswerDate = StructuralObject.SetValidValue(value, "AnswerDate");
                ReportPropertyChanged("AnswerDate");
                OnAnswerDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerDate;
        partial void OnAnswerDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CloseDate
        {
            get
            {
                return _CloseDate;
            }
            set
            {
                OnCloseDateChanging(value);
                ReportPropertyChanging("CloseDate");
                _CloseDate = StructuralObject.SetValidValue(value, "CloseDate");
                ReportPropertyChanged("CloseDate");
                OnCloseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CloseDate;
        partial void OnCloseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentTicketId
        {
            get
            {
                return _ParentTicketId;
            }
            set
            {
                OnParentTicketIdChanging(value);
                ReportPropertyChanging("ParentTicketId");
                _ParentTicketId = StructuralObject.SetValidValue(value, "ParentTicketId");
                ReportPropertyChanged("ParentTicketId");
                OnParentTicketIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentTicketId;
        partial void OnParentTicketIdChanging(Nullable<global::System.Int64> value);
        partial void OnParentTicketIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminAnswer
        {
            get
            {
                return _AdminAnswer;
            }
            set
            {
                OnAdminAnswerChanging(value);
                ReportPropertyChanging("AdminAnswer");
                _AdminAnswer = StructuralObject.SetValidValue(value, true, "AdminAnswer");
                ReportPropertyChanged("AdminAnswer");
                OnAdminAnswerChanged();
            }
        }
        private global::System.String _AdminAnswer;
        partial void OnAdminAnswerChanging(global::System.String value);
        partial void OnAdminAnswerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminCloseComment
        {
            get
            {
                return _AdminCloseComment;
            }
            set
            {
                OnAdminCloseCommentChanging(value);
                ReportPropertyChanging("AdminCloseComment");
                _AdminCloseComment = StructuralObject.SetValidValue(value, true, "AdminCloseComment");
                ReportPropertyChanged("AdminCloseComment");
                OnAdminCloseCommentChanged();
            }
        }
        private global::System.String _AdminCloseComment;
        partial void OnAdminCloseCommentChanging(global::System.String value);
        partial void OnAdminCloseCommentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CreatorId
        {
            get
            {
                return _CreatorId;
            }
            set
            {
                OnCreatorIdChanging(value);
                ReportPropertyChanging("CreatorId");
                _CreatorId = StructuralObject.SetValidValue(value, "CreatorId");
                ReportPropertyChanged("CreatorId");
                OnCreatorIdChanged();
            }
        }
        private Nullable<global::System.Int64> _CreatorId;
        partial void OnCreatorIdChanging(Nullable<global::System.Int64> value);
        partial void OnCreatorIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AnswerAdminId
        {
            get
            {
                return _AnswerAdminId;
            }
            set
            {
                OnAnswerAdminIdChanging(value);
                ReportPropertyChanging("AnswerAdminId");
                _AnswerAdminId = StructuralObject.SetValidValue(value, "AnswerAdminId");
                ReportPropertyChanged("AnswerAdminId");
                OnAnswerAdminIdChanged();
            }
        }
        private Nullable<global::System.Int64> _AnswerAdminId;
        partial void OnAnswerAdminIdChanging(Nullable<global::System.Int64> value);
        partial void OnAnswerAdminIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CloseAdminId
        {
            get
            {
                return _CloseAdminId;
            }
            set
            {
                OnCloseAdminIdChanging(value);
                ReportPropertyChanging("CloseAdminId");
                _CloseAdminId = StructuralObject.SetValidValue(value, "CloseAdminId");
                ReportPropertyChanged("CloseAdminId");
                OnCloseAdminIdChanged();
            }
        }
        private Nullable<global::System.Int64> _CloseAdminId;
        partial void OnCloseAdminIdChanging(Nullable<global::System.Int64> value);
        partial void OnCloseAdminIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_Image", "Image")]
        public Image Image
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("VodadModel.FK_Ticket_Image", "Image").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("VodadModel.FK_Ticket_Image", "Image").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Image> ImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Image>("VodadModel.FK_Ticket_Image", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Image>("VodadModel.FK_Ticket_Image", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_Ticket", "Tickets1")]
        public EntityCollection<Tickets> Tickets1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tickets>("VodadModel.FK_Ticket_Ticket", "Tickets1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tickets>("VodadModel.FK_Ticket_Ticket", "Tickets1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_Ticket", "Tickets")]
        public Tickets Tickets2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tickets>("VodadModel.FK_Ticket_Ticket", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tickets>("VodadModel.FK_Ticket_Ticket", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tickets> Tickets2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tickets>("VodadModel.FK_Ticket_Ticket", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tickets>("VodadModel.FK_Ticket_Ticket", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_TicketThemes", "TicketThemes")]
        public TicketThemes TicketThemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketThemes>("VodadModel.FK_Ticket_TicketThemes", "TicketThemes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketThemes>("VodadModel.FK_Ticket_TicketThemes", "TicketThemes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketThemes> TicketThemesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketThemes>("VodadModel.FK_Ticket_TicketThemes", "TicketThemes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketThemes>("VodadModel.FK_Ticket_TicketThemes", "TicketThemes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Ticket_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Ticket_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_User2", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User2", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Ticket_User2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Ticket_User2", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="TicketThemes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketThemes : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TicketThemes.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static TicketThemes CreateTicketThemes(global::System.Int64 id)
        {
            TicketThemes ticketThemes = new TicketThemes();
            ticketThemes.Id = id;
            return ticketThemes;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThemeName
        {
            get
            {
                return _ThemeName;
            }
            set
            {
                OnThemeNameChanging(value);
                ReportPropertyChanging("ThemeName");
                _ThemeName = StructuralObject.SetValidValue(value, true, "ThemeName");
                ReportPropertyChanged("ThemeName");
                OnThemeNameChanged();
            }
        }
        private global::System.String _ThemeName;
        partial void OnThemeNameChanging(global::System.String value);
        partial void OnThemeNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_TicketThemes", "Tickets")]
        public EntityCollection<Tickets> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tickets>("VodadModel.FK_Ticket_TicketThemes", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tickets>("VodadModel.FK_Ticket_TicketThemes", "Tickets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Timezone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Timezone : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Timezone.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Timezone CreateTimezone(global::System.Int64 id)
        {
            Timezone timezone = new Timezone();
            timezone.Id = id;
            return timezone;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_User_Timezone", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("VodadModel.FK_User_Timezone", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("VodadModel.FK_User_Timezone", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Transactions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transactions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Transactions.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="fromUserId">Исходное значение свойства FromUserId.</param>
        /// <param name="amount">Исходное значение свойства Amount.</param>
        /// <param name="toUserId">Исходное значение свойства ToUserId.</param>
        /// <param name="dateTime">Исходное значение свойства DateTime.</param>
        public static Transactions CreateTransactions(global::System.Int64 id, global::System.Int64 fromUserId, global::System.Decimal amount, global::System.Int64 toUserId, global::System.DateTime dateTime)
        {
            Transactions transactions = new Transactions();
            transactions.Id = id;
            transactions.FromUserId = fromUserId;
            transactions.Amount = amount;
            transactions.ToUserId = toUserId;
            transactions.DateTime = dateTime;
            return transactions;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value, "FromUserId");
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int64 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int64 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value, "ToUserId");
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int64 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int64 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value, "DateTime");
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Transactions_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Transactions_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Transactions_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Transactions_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Transactions_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Transactions_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Transactions_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Transactions_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Transactions_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Transactions_User1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта User.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="passwordSalt">Исходное значение свойства PasswordSalt.</param>
        /// <param name="lastLoginDate">Исходное значение свойства LastLoginDate.</param>
        /// <param name="isActivated">Исходное значение свойства IsActivated.</param>
        /// <param name="isLockedOut">Исходное значение свойства IsLockedOut.</param>
        /// <param name="lastLockedOutDate">Исходное значение свойства LastLockedOutDate.</param>
        public static User CreateUser(global::System.Int64 id, global::System.String passwordSalt, global::System.DateTime lastLoginDate, global::System.Boolean isActivated, global::System.Boolean isLockedOut, global::System.DateTime lastLockedOutDate)
        {
            User user = new User();
            user.Id = id;
            user.PasswordSalt = passwordSalt;
            user.LastLoginDate = lastLoginDate;
            user.IsActivated = isActivated;
            user.IsLockedOut = isLockedOut;
            user.LastLockedOutDate = lastLockedOutDate;
            return user;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, true, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private Nullable<global::System.Int64> _RoleId;
        partial void OnRoleIdChanging(Nullable<global::System.Int64> value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value, "RegistrationDate");
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistrationDate;
        partial void OnRegistrationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> TimeZoneId
        {
            get
            {
                return _TimeZoneId;
            }
            set
            {
                OnTimeZoneIdChanging(value);
                ReportPropertyChanging("TimeZoneId");
                _TimeZoneId = StructuralObject.SetValidValue(value, "TimeZoneId");
                ReportPropertyChanged("TimeZoneId");
                OnTimeZoneIdChanged();
            }
        }
        private Nullable<global::System.Int64> _TimeZoneId;
        partial void OnTimeZoneIdChanging(Nullable<global::System.Int64> value);
        partial void OnTimeZoneIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ReferrerId
        {
            get
            {
                return _ReferrerId;
            }
            set
            {
                OnReferrerIdChanging(value);
                ReportPropertyChanging("ReferrerId");
                _ReferrerId = StructuralObject.SetValidValue(value, "ReferrerId");
                ReportPropertyChanged("ReferrerId");
                OnReferrerIdChanged();
            }
        }
        private Nullable<global::System.Int64> _ReferrerId;
        partial void OnReferrerIdChanging(Nullable<global::System.Int64> value);
        partial void OnReferrerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false, "PasswordSalt");
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true, "Comments");
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = StructuralObject.SetValidValue(value, "LastModifiedDate");
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedDate;
        partial void OnLastModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value, "LastLoginDate");
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastLoginIp
        {
            get
            {
                return _LastLoginIp;
            }
            set
            {
                OnLastLoginIpChanging(value);
                ReportPropertyChanging("LastLoginIp");
                _LastLoginIp = StructuralObject.SetValidValue(value, true, "LastLoginIp");
                ReportPropertyChanged("LastLoginIp");
                OnLastLoginIpChanged();
            }
        }
        private global::System.String _LastLoginIp;
        partial void OnLastLoginIpChanging(global::System.String value);
        partial void OnLastLoginIpChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                OnIsActivatedChanging(value);
                ReportPropertyChanging("IsActivated");
                _IsActivated = StructuralObject.SetValidValue(value, "IsActivated");
                ReportPropertyChanged("IsActivated");
                OnIsActivatedChanged();
            }
        }
        private global::System.Boolean _IsActivated;
        partial void OnIsActivatedChanging(global::System.Boolean value);
        partial void OnIsActivatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value, "IsLockedOut");
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockedOutDate
        {
            get
            {
                return _LastLockedOutDate;
            }
            set
            {
                OnLastLockedOutDateChanging(value);
                ReportPropertyChanging("LastLockedOutDate");
                _LastLockedOutDate = StructuralObject.SetValidValue(value, "LastLockedOutDate");
                ReportPropertyChanged("LastLockedOutDate");
                OnLastLockedOutDateChanged();
            }
        }
        private global::System.DateTime _LastLockedOutDate;
        partial void OnLastLockedOutDateChanging(global::System.DateTime value);
        partial void OnLastLockedOutDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastLockedOutReason
        {
            get
            {
                return _LastLockedOutReason;
            }
            set
            {
                OnLastLockedOutReasonChanging(value);
                ReportPropertyChanging("LastLockedOutReason");
                _LastLockedOutReason = StructuralObject.SetValidValue(value, true, "LastLockedOutReason");
                ReportPropertyChanged("LastLockedOutReason");
                OnLastLockedOutReasonChanged();
            }
        }
        private global::System.String _LastLockedOutReason;
        partial void OnLastLockedOutReasonChanging(global::System.String value);
        partial void OnLastLockedOutReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewPasswordKey
        {
            get
            {
                return _NewPasswordKey;
            }
            set
            {
                OnNewPasswordKeyChanging(value);
                ReportPropertyChanging("NewPasswordKey");
                _NewPasswordKey = StructuralObject.SetValidValue(value, true, "NewPasswordKey");
                ReportPropertyChanged("NewPasswordKey");
                OnNewPasswordKeyChanged();
            }
        }
        private global::System.String _NewPasswordKey;
        partial void OnNewPasswordKeyChanging(global::System.String value);
        partial void OnNewPasswordKeyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewEmail
        {
            get
            {
                return _NewEmail;
            }
            set
            {
                OnNewEmailChanging(value);
                ReportPropertyChanging("NewEmail");
                _NewEmail = StructuralObject.SetValidValue(value, true, "NewEmail");
                ReportPropertyChanged("NewEmail");
                OnNewEmailChanged();
            }
        }
        private global::System.String _NewEmail;
        partial void OnNewEmailChanging(global::System.String value);
        partial void OnNewEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewEmailKey
        {
            get
            {
                return _NewEmailKey;
            }
            set
            {
                OnNewEmailKeyChanging(value);
                ReportPropertyChanging("NewEmailKey");
                _NewEmailKey = StructuralObject.SetValidValue(value, true, "NewEmailKey");
                ReportPropertyChanged("NewEmailKey");
                OnNewEmailKeyChanged();
            }
        }
        private global::System.String _NewEmailKey;
        partial void OnNewEmailKeyChanging(global::System.String value);
        partial void OnNewEmailKeyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NewEmailRequested
        {
            get
            {
                return _NewEmailRequested;
            }
            set
            {
                OnNewEmailRequestedChanging(value);
                ReportPropertyChanging("NewEmailRequested");
                _NewEmailRequested = StructuralObject.SetValidValue(value, "NewEmailRequested");
                ReportPropertyChanged("NewEmailRequested");
                OnNewEmailRequestedChanged();
            }
        }
        private Nullable<global::System.DateTime> _NewEmailRequested;
        partial void OnNewEmailRequestedChanging(Nullable<global::System.DateTime> value);
        partial void OnNewEmailRequestedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value, "Rating");
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int64> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int64> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Karma
        {
            get
            {
                return _Karma;
            }
            set
            {
                OnKarmaChanging(value);
                ReportPropertyChanging("Karma");
                _Karma = StructuralObject.SetValidValue(value, "Karma");
                ReportPropertyChanged("Karma");
                OnKarmaChanged();
            }
        }
        private Nullable<global::System.Int64> _Karma;
        partial void OnKarmaChanging(Nullable<global::System.Int64> value);
        partial void OnKarmaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastOnlineDateTime
        {
            get
            {
                return _LastOnlineDateTime;
            }
            set
            {
                OnLastOnlineDateTimeChanging(value);
                ReportPropertyChanging("LastOnlineDateTime");
                _LastOnlineDateTime = StructuralObject.SetValidValue(value, "LastOnlineDateTime");
                ReportPropertyChanged("LastOnlineDateTime");
                OnLastOnlineDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastOnlineDateTime;
        partial void OnLastOnlineDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastOnlineDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEmailSendDateTime
        {
            get
            {
                return _LastEmailSendDateTime;
            }
            set
            {
                OnLastEmailSendDateTimeChanging(value);
                ReportPropertyChanging("LastEmailSendDateTime");
                _LastEmailSendDateTime = StructuralObject.SetValidValue(value, "LastEmailSendDateTime");
                ReportPropertyChanged("LastEmailSendDateTime");
                OnLastEmailSendDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEmailSendDateTime;
        partial void OnLastEmailSendDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEmailSendDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountAttachedIP
        {
            get
            {
                return _AccountAttachedIP;
            }
            set
            {
                OnAccountAttachedIPChanging(value);
                ReportPropertyChanging("AccountAttachedIP");
                _AccountAttachedIP = StructuralObject.SetValidValue(value, true, "AccountAttachedIP");
                ReportPropertyChanged("AccountAttachedIP");
                OnAccountAttachedIPChanged();
            }
        }
        private global::System.String _AccountAttachedIP;
        partial void OnAccountAttachedIPChanging(global::System.String value);
        partial void OnAccountAttachedIPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RegisteredRoleId
        {
            get
            {
                return _RegisteredRoleId;
            }
            set
            {
                OnRegisteredRoleIdChanging(value);
                ReportPropertyChanging("RegisteredRoleId");
                _RegisteredRoleId = StructuralObject.SetValidValue(value, "RegisteredRoleId");
                ReportPropertyChanged("RegisteredRoleId");
                OnRegisteredRoleIdChanged();
            }
        }
        private Nullable<global::System.Int64> _RegisteredRoleId;
        partial void OnRegisteredRoleIdChanging(Nullable<global::System.Int64> value);
        partial void OnRegisteredRoleIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VerificationKey
        {
            get
            {
                return _VerificationKey;
            }
            set
            {
                OnVerificationKeyChanging(value);
                ReportPropertyChanging("VerificationKey");
                _VerificationKey = StructuralObject.SetValidValue(value, true, "VerificationKey");
                ReportPropertyChanged("VerificationKey");
                OnVerificationKeyChanged();
            }
        }
        private global::System.String _VerificationKey;
        partial void OnVerificationKeyChanging(global::System.String value);
        partial void OnVerificationKeyChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_AlertMessage_User", "AlertMessage")]
        public EntityCollection<AlertMessage> AlertMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlertMessage>("VodadModel.FK_AlertMessage_User", "AlertMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlertMessage>("VodadModel.FK_AlertMessage_User", "AlertMessage", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_User", "Ban")]
        public EntityCollection<Ban> Ban
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ban>("VodadModel.FK_Ban_User", "Ban");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ban>("VodadModel.FK_Ban_User", "Ban", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_User1", "Ban")]
        public EntityCollection<Ban> Ban1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ban>("VodadModel.FK_Ban_User1", "Ban");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ban>("VodadModel.FK_Ban_User1", "Ban", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ban_User2", "Ban")]
        public EntityCollection<Ban> Ban2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ban>("VodadModel.FK_Ban_User2", "Ban");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ban>("VodadModel.FK_Ban_User2", "Ban", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_BlackList_User", "BlackList")]
        public EntityCollection<BlackList> BlackList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlackList>("VodadModel.FK_BlackList_User", "BlackList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlackList>("VodadModel.FK_BlackList_User", "BlackList", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_BlackList_User1", "BlackList")]
        public EntityCollection<BlackList> BlackList1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlackList>("VodadModel.FK_BlackList_User1", "BlackList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlackList>("VodadModel.FK_BlackList_User1", "BlackList", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Certificates_User", "Certificates")]
        public EntityCollection<Certificates> Certificates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Certificates>("VodadModel.FK_Certificates_User", "Certificates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Certificates>("VodadModel.FK_Certificates_User", "Certificates", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Cheaters_User", "Cheaters")]
        public EntityCollection<Cheaters> Cheaters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cheaters>("VodadModel.FK_Cheaters_User", "Cheaters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cheaters>("VodadModel.FK_Cheaters_User", "Cheaters", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Image_User", "Image")]
        public EntityCollection<Image> Image
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("VodadModel.FK_Image_User", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("VodadModel.FK_Image_User", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Messages_User", "Messages")]
        public EntityCollection<Messages> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Messages>("VodadModel.FK_Messages_User", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Messages>("VodadModel.FK_Messages_User", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Messages_User1", "Messages")]
        public EntityCollection<Messages> Messages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Messages>("VodadModel.FK_Messages_User1", "Messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Messages>("VodadModel.FK_Messages_User1", "Messages", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_MoneyTransfers_User", "MoneyTransfers")]
        public EntityCollection<MoneyTransfers> MoneyTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MoneyTransfers>("VodadModel.FK_MoneyTransfers_User", "MoneyTransfers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MoneyTransfers>("VodadModel.FK_MoneyTransfers_User", "MoneyTransfers", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_News_User", "News")]
        public EntityCollection<News> News
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<News>("VodadModel.FK_News_User", "News");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<News>("VodadModel.FK_News_User", "News", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Order_User", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("VodadModel.FK_Order_User", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("VodadModel.FK_Order_User", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderPerformed_User", "OrderPerformed")]
        public EntityCollection<OrderPerformed> OrderPerformed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderPerformed>("VodadModel.FK_OrderPerformed_User", "OrderPerformed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderPerformed>("VodadModel.FK_OrderPerformed_User", "OrderPerformed", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_PerformerPlatform_User", "PerformerPlatform")]
        public EntityCollection<PerformerPlatform> PerformerPlatform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformerPlatform>("VodadModel.FK_PerformerPlatform_User", "PerformerPlatform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformerPlatform>("VodadModel.FK_PerformerPlatform_User", "PerformerPlatform", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_User_Roles", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VodadModel.FK_User_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VodadModel.FK_User_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VodadModel.FK_User_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("VodadModel.FK_User_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_User", "Tickets")]
        public EntityCollection<Tickets> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tickets>("VodadModel.FK_Ticket_User", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tickets>("VodadModel.FK_Ticket_User", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_User1", "Tickets")]
        public EntityCollection<Tickets> Tickets1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tickets>("VodadModel.FK_Ticket_User1", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tickets>("VodadModel.FK_Ticket_User1", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Ticket_User2", "Tickets")]
        public EntityCollection<Tickets> Tickets2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tickets>("VodadModel.FK_Ticket_User2", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tickets>("VodadModel.FK_Ticket_User2", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_User_Timezone", "Timezone")]
        public Timezone Timezone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timezone>("VodadModel.FK_User_Timezone", "Timezone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timezone>("VodadModel.FK_User_Timezone", "Timezone").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Timezone> TimezoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Timezone>("VodadModel.FK_User_Timezone", "Timezone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Timezone>("VodadModel.FK_User_Timezone", "Timezone", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Transactions_User", "Transactions")]
        public EntityCollection<Transactions> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transactions>("VodadModel.FK_Transactions_User", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transactions>("VodadModel.FK_Transactions_User", "Transactions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Transactions_User1", "Transactions")]
        public EntityCollection<Transactions> Transactions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transactions>("VodadModel.FK_Transactions_User1", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transactions>("VodadModel.FK_Transactions_User1", "Transactions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_User_User", "User1")]
        public EntityCollection<User> User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("VodadModel.FK_User_User", "User1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("VodadModel.FK_User_User", "User1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_User_User", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_User_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_User_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_User_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_User_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_UserMerchants_User", "UserMerchants")]
        public EntityCollection<UserMerchants> UserMerchants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMerchants>("VodadModel.FK_UserMerchants_User", "UserMerchants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMerchants>("VodadModel.FK_UserMerchants_User", "UserMerchants", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Video_User", "Video")]
        public EntityCollection<Video> Video
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("VodadModel.FK_Video_User", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("VodadModel.FK_Video_User", "Video", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Wallet_User", "Wallet")]
        public EntityCollection<Wallet> Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wallet>("VodadModel.FK_Wallet_User", "Wallet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wallet>("VodadModel.FK_Wallet_User", "Wallet", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_WhiteList_User", "WhiteList")]
        public EntityCollection<WhiteList> WhiteList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WhiteList>("VodadModel.FK_WhiteList_User", "WhiteList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WhiteList>("VodadModel.FK_WhiteList_User", "WhiteList", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_WhiteList_User1", "WhiteList")]
        public EntityCollection<WhiteList> WhiteList1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WhiteList>("VodadModel.FK_WhiteList_User1", "WhiteList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WhiteList>("VodadModel.FK_WhiteList_User1", "WhiteList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="UserMerchants")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMerchants : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта UserMerchants.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static UserMerchants CreateUserMerchants(global::System.Int64 id)
        {
            UserMerchants userMerchants = new UserMerchants();
            userMerchants.Id = id;
            return userMerchants;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MerchantId
        {
            get
            {
                return _MerchantId;
            }
            set
            {
                OnMerchantIdChanging(value);
                ReportPropertyChanging("MerchantId");
                _MerchantId = StructuralObject.SetValidValue(value, "MerchantId");
                ReportPropertyChanged("MerchantId");
                OnMerchantIdChanged();
            }
        }
        private Nullable<global::System.Int64> _MerchantId;
        partial void OnMerchantIdChanging(Nullable<global::System.Int64> value);
        partial void OnMerchantIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, true, "Account");
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousAccount
        {
            get
            {
                return _PreviousAccount;
            }
            set
            {
                OnPreviousAccountChanging(value);
                ReportPropertyChanging("PreviousAccount");
                _PreviousAccount = StructuralObject.SetValidValue(value, true, "PreviousAccount");
                ReportPropertyChanged("PreviousAccount");
                OnPreviousAccountChanged();
            }
        }
        private global::System.String _PreviousAccount;
        partial void OnPreviousAccountChanging(global::System.String value);
        partial void OnPreviousAccountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NextAccount
        {
            get
            {
                return _NextAccount;
            }
            set
            {
                OnNextAccountChanging(value);
                ReportPropertyChanging("NextAccount");
                _NextAccount = StructuralObject.SetValidValue(value, true, "NextAccount");
                ReportPropertyChanged("NextAccount");
                OnNextAccountChanged();
            }
        }
        private global::System.String _NextAccount;
        partial void OnNextAccountChanging(global::System.String value);
        partial void OnNextAccountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastChangeDateTime
        {
            get
            {
                return _LastChangeDateTime;
            }
            set
            {
                OnLastChangeDateTimeChanging(value);
                ReportPropertyChanging("LastChangeDateTime");
                _LastChangeDateTime = StructuralObject.SetValidValue(value, "LastChangeDateTime");
                ReportPropertyChanged("LastChangeDateTime");
                OnLastChangeDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastChangeDateTime;
        partial void OnLastChangeDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastChangeDateTimeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_UserMerchants_Merchants", "Merchants")]
        public Merchants Merchants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Merchants>("VodadModel.FK_UserMerchants_Merchants", "Merchants").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Merchants>("VodadModel.FK_UserMerchants_Merchants", "Merchants").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Merchants> MerchantsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Merchants>("VodadModel.FK_UserMerchants_Merchants", "Merchants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Merchants>("VodadModel.FK_UserMerchants_Merchants", "Merchants", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_UserMerchants_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_UserMerchants_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_UserMerchants_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_UserMerchants_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_UserMerchants_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Video")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Video : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Video.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="userId">Исходное значение свойства UserId.</param>
        /// <param name="videoName">Исходное значение свойства VideoName.</param>
        /// <param name="videoLink">Исходное значение свойства VideoLink.</param>
        /// <param name="videoSize">Исходное значение свойства VideoSize.</param>
        /// <param name="videoLength">Исходное значение свойства VideoLength.</param>
        /// <param name="creationDate">Исходное значение свойства CreationDate.</param>
        public static Video CreateVideo(global::System.Int64 id, global::System.Int64 userId, global::System.String videoName, global::System.String videoLink, global::System.Int64 videoSize, global::System.Int64 videoLength, global::System.DateTime creationDate)
        {
            Video video = new Video();
            video.Id = id;
            video.UserId = userId;
            video.VideoName = videoName;
            video.VideoLink = videoLink;
            video.VideoSize = videoSize;
            video.VideoLength = videoLength;
            video.CreationDate = creationDate;
            return video;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VideoName
        {
            get
            {
                return _VideoName;
            }
            set
            {
                OnVideoNameChanging(value);
                ReportPropertyChanging("VideoName");
                _VideoName = StructuralObject.SetValidValue(value, false, "VideoName");
                ReportPropertyChanged("VideoName");
                OnVideoNameChanged();
            }
        }
        private global::System.String _VideoName;
        partial void OnVideoNameChanging(global::System.String value);
        partial void OnVideoNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VideoLink
        {
            get
            {
                return _VideoLink;
            }
            set
            {
                OnVideoLinkChanging(value);
                ReportPropertyChanging("VideoLink");
                _VideoLink = StructuralObject.SetValidValue(value, false, "VideoLink");
                ReportPropertyChanged("VideoLink");
                OnVideoLinkChanged();
            }
        }
        private global::System.String _VideoLink;
        partial void OnVideoLinkChanging(global::System.String value);
        partial void OnVideoLinkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VideoSize
        {
            get
            {
                return _VideoSize;
            }
            set
            {
                OnVideoSizeChanging(value);
                ReportPropertyChanging("VideoSize");
                _VideoSize = StructuralObject.SetValidValue(value, "VideoSize");
                ReportPropertyChanged("VideoSize");
                OnVideoSizeChanged();
            }
        }
        private global::System.Int64 _VideoSize;
        partial void OnVideoSizeChanging(global::System.Int64 value);
        partial void OnVideoSizeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VideoLength
        {
            get
            {
                return _VideoLength;
            }
            set
            {
                OnVideoLengthChanging(value);
                ReportPropertyChanging("VideoLength");
                _VideoLength = StructuralObject.SetValidValue(value, "VideoLength");
                ReportPropertyChanged("VideoLength");
                OnVideoLengthChanged();
            }
        }
        private global::System.Int64 _VideoLength;
        partial void OnVideoLengthChanging(global::System.Int64 value);
        partial void OnVideoLengthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, true, "Extension");
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_OrderContent_Video", "OrderContent")]
        public EntityCollection<OrderContent> OrderContent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderContent>("VodadModel.FK_OrderContent_Video", "OrderContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderContent>("VodadModel.FK_OrderContent_Video", "OrderContent", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Video_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Video_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Video_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Video_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Video_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="Wallet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wallet : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Wallet.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Wallet CreateWallet(global::System.Int64 id)
        {
            Wallet wallet = new Wallet();
            wallet.Id = id;
            return wallet;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, "Account");
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Account;
        partial void OnAccountChanging(Nullable<global::System.Decimal> value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Transfer
        {
            get
            {
                return _Transfer;
            }
            set
            {
                OnTransferChanging(value);
                ReportPropertyChanging("Transfer");
                _Transfer = StructuralObject.SetValidValue(value, "Transfer");
                ReportPropertyChanged("Transfer");
                OnTransferChanged();
            }
        }
        private Nullable<global::System.Decimal> _Transfer;
        partial void OnTransferChanging(Nullable<global::System.Decimal> value);
        partial void OnTransferChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReferralsIncome
        {
            get
            {
                return _ReferralsIncome;
            }
            set
            {
                OnReferralsIncomeChanging(value);
                ReportPropertyChanging("ReferralsIncome");
                _ReferralsIncome = StructuralObject.SetValidValue(value, "ReferralsIncome");
                ReportPropertyChanged("ReferralsIncome");
                OnReferralsIncomeChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReferralsIncome;
        partial void OnReferralsIncomeChanging(Nullable<global::System.Decimal> value);
        partial void OnReferralsIncomeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_Wallet_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Wallet_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Wallet_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_Wallet_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_Wallet_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VodadModel", Name="WhiteList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WhiteList : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта WhiteList.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static WhiteList CreateWhiteList(global::System.Int64 id)
        {
            WhiteList whiteList = new WhiteList();
            whiteList.Id = id;
            return whiteList;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OwnerId
        {
            get
            {
                return _OwnerId;
            }
            set
            {
                OnOwnerIdChanging(value);
                ReportPropertyChanging("OwnerId");
                _OwnerId = StructuralObject.SetValidValue(value, "OwnerId");
                ReportPropertyChanged("OwnerId");
                OnOwnerIdChanged();
            }
        }
        private Nullable<global::System.Int64> _OwnerId;
        partial void OnOwnerIdChanging(Nullable<global::System.Int64> value);
        partial void OnOwnerIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int64> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int64> value);
        partial void OnUserIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_WhiteList_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_WhiteList_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_WhiteList_User", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_WhiteList_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_WhiteList_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VodadModel", "FK_WhiteList_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_WhiteList_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_WhiteList_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("VodadModel.FK_WhiteList_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("VodadModel.FK_WhiteList_User1", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="VodadModel", Name="sp_helpdiagramdefinition_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagramdefinition_Result : ComplexObject
    {
        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="VodadModel", Name="sp_helpdiagrams_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sp_helpdiagrams_Result : ComplexObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sp_helpdiagrams_Result.
        /// </summary>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="ownerID">Исходное значение свойства OwnerID.</param>
        public static sp_helpdiagrams_Result Createsp_helpdiagrams_Result(global::System.String name, global::System.Int32 id, global::System.Int32 ownerID)
        {
            sp_helpdiagrams_Result sp_helpdiagrams_Result = new sp_helpdiagrams_Result();
            sp_helpdiagrams_Result.Name = name;
            sp_helpdiagrams_Result.ID = id;
            sp_helpdiagrams_Result.OwnerID = ownerID;
            return sp_helpdiagrams_Result;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, true, "Database");
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value, "ID");
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, true, "Owner");
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value, "OwnerID");
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Int32 _OwnerID;
        partial void OnOwnerIDChanging(global::System.Int32 value);
        partial void OnOwnerIDChanged();

        #endregion

    }

    #endregion

}
